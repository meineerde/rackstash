version: "{build}-{branch}"

environment:
  matrix:
    - RUBY_VERSION: "26-x64"
    - RUBY_VERSION: "25-x64"
    - RUBY_VERSION: "24-x64"
    - RUBY_VERSION: "23-x64"
    - RUBY_VERSION: "22-x64"
    - RUBY_VERSION: "21-x64"
    - RUBY_VERSION: trunk
    - RUBY_VERSION: jruby-9.2.9.0
    - RUBY_VERSION: jruby-9.1.17.0
    - RUBY_VERSION: jruby-9.0.5.0

matrix:
  allow_failures:
    - ruby_version: _trunk

init:
  # To avoid duplicated executables in PATH, see https://github.com/ruby/spec/pull/468
  - set PATH=C:\Program Files\7-Zip;C:\Program Files\AppVeyor\BuildAgent;C:\Program Files\Git\cmd;C:\Windows\system32;C:\Program Files;C:\Windows
  - ps: |
      # Loads trunk build and updates MSYS2 / MinGW to most recent gcc compiler
      if ($env:RUBY_VERSION -eq 'trunk') {
        $trunk_uri = 'https://ci.appveyor.com/api/projects/MSP-Greg/ruby-loco/artifacts/ruby_trunk.7z'
        (New-Object Net.WebClient).DownloadFile($trunk_uri, 'C:\ruby_trunk.7z')
        7z.exe x C:\ruby_trunk.7z -oC:\Ruby_trunk

        $env:PATH = "C:\Ruby_trunk\bin;" + $env:PATH
      }
      ElseIf ($env:RUBY_VERSION.StartsWith("jruby-")) {
        # Load and install JRuby
        $jruby_version = $env:RUBY_VERSION.split("-")[1]
        $jruby_uri = "https://s3.amazonaws.com/jruby.org/downloads/$jruby_version/jruby-bin-$jruby_version.zip"
        (New-Object Net.WebClient).DownloadFile($jruby_uri, "C:\JRuby-$jruby_version.zip")
        7z.exe x "C:\JRuby-$jruby_version.zip" -oC:\

        $env:PATH = "C:\jruby-$jruby_version\bin;" + $env:PATH

        if ($jruby_version.StartsWith('9.0')) {
          gem install bundler -v "< 2.0"
        } else {
          gem install bundler
        }
      }
      Else {
        $env:PATH = "C:\Ruby" + $env:RUBY_VERSION + "\bin;" + $env:PATH
      }

  - ps: if ($env:RUBY_VERSION.StartsWith("jruby-")) { jruby -v } else { ruby -v }
  - gem -v
  - bundle -v

install:
  # Create suitable directory for temporary files in tests
  - mkdir tmp
  - icacls tmp /inheritance:r /grant Everyone:F
  - set TMPDIR=tmp

  - bundle config --local path vendor/bundle
  - bundle install

clone_depth: 10
build: off
deploy: off

test_script:
  - bundle exec rspec spec
